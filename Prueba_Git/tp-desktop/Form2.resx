<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Google.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAE8AAABQCAIAAADX1r+fAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wgAADsIBFShKgAAABJRJREFUeF7tnF9sU1Ucx30x0UR94cEHfdLEBx982ubDlMTNRTMJsIxFGMhCRRj+
        DQwCMYjJ4pyCfwgyM8s6NZuMMpxKN0MHskBGTGEbFjfGFscfnYy1pXf9c9f23t5bf+QeT+qha9p7zh3z
        cD75Jlt6f/31fHbPOT1dlt1T0hD1hbQU74AjmN6yRQ/wjrDlF2HLL8KWX4QtvwhbfhG2/CJs+UXY8ouw
        5Zd5stWmp2LdP4T31Ac3rrn58kv+8mf9SxZDbr5SIb2zPtywM37MpQcDqNoyLLeN9/XO1NX6ny/ylRZm
        D9RIb65L9PehZ1qAhbbKoCe4YTWhlEukTWuV8+dQF6ZYY6sokf2fEA55Be6z/HVzStdRQ0awt9XDIemN
        GmL05hLatRU1ZQRjW10KBl9bRQzaXGAnUwbPor6MYGqrqtLbrxKDNhcrVAGWtpG9HxGDJiK9XiN/a094
        zqjjo+rYRQh8L7e1SG/Z0sssUgWY2SreofQRE4F7ro5cQKWZgKvGvLBOFWBkq2vB9VXpeumJtjTltLtq
        yaj9C+tUAWGbP3qgR/78Yd8LBYQnBARQ0QKAja32+yr1xL3xgw8FKp9KV4V9C1UsDFjYqjPJvgfBFqJ0
        3yfVPmGoBpaX6lHqNcIUBrb63w5DFSdS/6ivrFD+rhVVLBgY2GojNsIWEmt7PBWbRRWZGLis5ZuhK7R/
        LsHANukpIlQhmrcCXZ4DeFETUel8oQO17elHCFWIfvkDdHkOsEBe8YepPhVBB2rbkw8QqhB98gC6PAdY
        IK+MT1HdXOjwf7I9f/WO287jTJ6YvuMzeR53KUlGTzcHdKC1zfgOdOlUwawaQxWZeK8zniW1jhg2xClr
        lCl/cwNNaG1vP104XE8WOStbL36PKvKn+ZcElsRZ82W2N/BcgCa0tnByVP/dqGZ679/cVVxwqBJS0lUT
        VczMvKSWqm6axZI4+9wJVGEWaEJtm0rFflsBqqPuRcsOv2ioGmkcsKOKfPhpUMWG6fFMJFGFWaAJA9vw
        VOfR7seKnRXpqkb2edtQUW78Ma2V75axIQ48qNDKMrLVdG3lsS2EJ85+b7ueyml/Gf5Lq9ybQRUCKxkV
        UQB9GNgCg74RQjI9thPvXgiModJMXItcbzjXXNraUvJhCBviLP1UDmfb4HMFWrGxBWCVEpJE1vZutw87
        z1wfGg1OeAOXID9fPWUfPrz5dGORs8qoefqbHc99PIk9jXT8qqDXoANaCVtTqJoKMxa7mU5hu23xZwNY
        dUt7jPKDHoalLRCMh7JsV/mkqripEwa27qvZaBw1p4exLRBKRGqOb79t9Gay8siBGzOUh8X/wN4WUDR1
        z5CDGHq+gcUMPzjUkRGW2Bp4bnir3XWEQy4p+9F2aLwHdWGKhbYAHCrc1/o3nny/0LmCUMqYJa7ag2Ou
        eJLBQSIj1tpipmR/18Tx+rNNq91by49ueOZItZGlrk2wyLf17+4Y77kSnkTVljFPtgsEYcsvwpZfhC2/
        CFt+Ebb8Imz5Rdjyi7DlF2HLL8j27vqvPDs6YnwLgx043rKtc/wJX+6KNET/AZvNX5/lP9PEAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>